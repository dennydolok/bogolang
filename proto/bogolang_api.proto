syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "bogolang_payload.proto";

package proto;

option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";

  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};

// Generated according to https://cloud.google.com/apis/design/standard_methods
service Bogolang {
  rpc Login (LoginRequest) returns (LoginResponse){
    option (google.api.http)  = {
        post: "/auth/login"
        body: "*"
    };
  };

  rpc GetUser (GetAllUserRequest) returns (GetAllUserResponse){
    option (google.api.http)  = {
      get: "/users/user"
    };
  }

  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http)  = {
      post: "/users/user"
      body: "*"
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
    option (google.api.http)  = {
      put : "/users/user"
      body: "*"
    };
  }

  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse){
    option (google.api.http)  = {
      delete: "/users/user/{user_id}"
    };
  }
}